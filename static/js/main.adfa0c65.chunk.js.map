{"version":3,"sources":["components/Card/Card.module.css","components/Card/CardWrapper.module.css","components/Main/Main.module.css","components/Header/Header.module.css","components/Score/Score.module.css","utils/Spinner.module.css","assets/food-icon.png","components/Header/Header.js","components/Score/Score.js","components/Card/Card.js","components/Card/CardWrapper.js","utils/Spinner.js","components/Main/Main.js","App.js","index.js"],"names":["module","exports","Header","className","classes","header","src","foodImage","alt","Score","props","score","bestScore","currentScore","Card","cardContainer","card","onClick","cardClickHandler","image","name","CardWrapper","container","cardGrid","data","map","id","Spinner","spinner","Main","useState","foodData","setFoodData","isLoading","setIsLoading","error","setError","selectedFood","setSelectedFood","setCurrentScore","setBestScore","fetchData","useCallback","a","foodDataArray","i","fetch","response","json","push","meals","idMeal","strMeal","strMealThumb","message","useEffect","loadData","shuffleArray","array","sort","b","Math","random","gameUpdate","includes","resetGame","newCurrentScore","prevState","content","Fragment","center","e","target","parentNode","lastChild","textContent","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adfa0c65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"Card_cardContainer__-79NN\",\"card\":\"Card_card__2zOoQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardWrapper_container__2ELbJ\",\"cardGrid\":\"CardWrapper_cardGrid__2avxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Main_center__2tFw5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1rene\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"Score_score__1x0uA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__d_RCg\",\"spin\":\"Spinner_spin__16CR_\"};","export default __webpack_public_path__ + \"static/media/food-icon.0e171bba.png\";","import classes from './Header.module.css';\r\nimport foodImage from '../../assets/food-icon.png'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={classes.header}>\r\n            <img src={foodImage} alt='food logo' />\r\n            <h1>Food Memory Game</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import classes from \"./Score.module.css\";\r\n\r\nconst Score = (props) => {\r\n  return <div className={classes.score}>\r\n      <p>Highest Score: {props.bestScore}</p>\r\n      <p>Current Score: {props.currentScore}</p>\r\n  </div>;\r\n};\r\n\r\nexport default Score;\r\n","import classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <li className={classes.cardContainer}>\r\n            <div className={classes.card} onClick={props.cardClickHandler}>\r\n                <img src={props.image} alt='card'/>\r\n                <h3>{props.name}</h3>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card;","import Card from \"./Card\";\r\nimport classes from \"./CardWrapper.module.css\";\r\n\r\nconst CardWrapper = (props) => {\r\n  //an array of objects with name and image\r\n  // const allCards = () => {\r\n  //   props.data.map((card) => (\r\n  //     <Card\r\n  //       name={card.name}\r\n  //       key={card.id}\r\n  //       id={card.id}\r\n  //       image={card.image}\r\n  //       cardClickHandler={props.cardClickHandler}\r\n  //     />\r\n  //   ));\r\n  // };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <ul className={classes.cardGrid}>\r\n        {props.data.map((card) => (\r\n          <Card\r\n            name={card.name}\r\n            key={card.id}\r\n            id={card.id}\r\n            image={card.image}\r\n            cardClickHandler={props.cardClickHandler}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardWrapper;\r\n","import classes from \"./Spinner.module.css\";\r\n\r\nconst Spinner = () => {\r\n    return (<div className={classes.spinner}></div>)\r\n}\r\n\r\nexport default Spinner;","import Score from \"../Score/Score\";\r\nimport CardWrapper from \"../Card/CardWrapper\";\r\nimport Spinner from \"../../utils/Spinner\";\r\nimport classes from \"./Main.module.css\";\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nconst Main = () => {\r\n  const [foodData, setFoodData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedFood, setSelectedFood] = useState([]);\r\n  const [currentScore, setCurrentScore] = useState(0);\r\n  const [bestScore, setBestScore] = useState(0);\r\n\r\n  const CARD_AMOUNT = 8;\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    // setError(null);\r\n    const foodDataArray = [];\r\n    try {\r\n      for (let i = 0; i < CARD_AMOUNT; i++) {\r\n        const response = await fetch(\r\n          \"https://www.themealdb.com/api/json/v1/1/random.php\"\r\n        );\r\n        const data = await response.json();\r\n        foodDataArray.push({\r\n          id: data.meals[0].idMeal,\r\n          name: data.meals[0].strMeal,\r\n          image: data.meals[0].strMealThumb,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n    return foodDataArray;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      setFoodData(shuffleArray(await fetchData()));\r\n    };\r\n    loadData();\r\n  }, []);\r\n\r\n  const shuffleArray = (array) => {\r\n    return [...array].sort((a, b) => 0.5 - Math.random());\r\n  };\r\n\r\n  const cardClickHandler = (e) => {\r\n    const name = e.target.parentNode.lastChild.textContent;\r\n    gameUpdate(name);\r\n    setFoodData(shuffleArray(foodData));\r\n  };\r\n\r\n  const gameUpdate = (name) => {\r\n    if (selectedFood.includes(name)) {\r\n      resetGame();\r\n    } else {\r\n      const newCurrentScore = currentScore + 1;\r\n      if (newCurrentScore > bestScore) setBestScore(newCurrentScore);\r\n      setCurrentScore(newCurrentScore);\r\n      setSelectedFood((prevState) => [...prevState, name]);\r\n    }\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setSelectedFood([]);\r\n    setCurrentScore(0);\r\n  };\r\n\r\n  let content = `Error! ${error}`;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Score currentScore={currentScore} bestScore={bestScore} />\r\n      <div className={classes.center}>{isLoading && <Spinner />}</div>\r\n      <div className={classes.center}>{error && content}</div>\r\n      {!isLoading && !error && (\r\n        <CardWrapper data={foodData} cardClickHandler={cardClickHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Main />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}